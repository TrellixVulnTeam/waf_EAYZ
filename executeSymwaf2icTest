#!/bin/bash -e

# File:         executeSymwaf2icTest
# Author:       Kai Husmann <kai.husmann@kip.uni-heidelberg.de> (KHS)
# Changelog:    [2015-04-17 15:02:21]   created/released (KHS)
#               [2015-04-17 15:02:37]   now hiding make (KHS)
#               [2015-09-18 02:26:31]   TEST_DIR can now be specified as env (KHS)
#               [2015-10-28 15:00:00]   test suite for jenkins (KHS)
# --- chlog insert above ---

# PREREQUISITES
TESTS="$@"
TESTS=${TESTS:-"default"}
TEST_DIR=${TEST_DIR:-"/tmp/symtest"}
OUR_ZONES="symwaf2ic,symwaf2ic_options,dependency,mr"

WAFSRC_DIR="${PWD}"

# SANITY
test -f "waf-light" || { echo "ERR: looks like we're executed in the wrong directory."; exit 1; }


# TEST FUNCTIONS
function test_default { # just t
    ./waf setup --project lib-rcf --zones $OUR_ZONES
}
function test_dependency {
   ./waf setup --project halbe --zones symwaf2ic,symwaf2ic_dependency,mr --with-ess
}
function test_reset {
    test -d halbe && { pushd halbe; git checkout -f ess_trafo; echo "fu" >> project.prj; popd; }
    ./waf setup --project halbe --update-branches soft --zones symwaf2ic,mr \
        && { echo "SHOULD HAVE FAILED"; exit 1; } \
        || { echo -e "FAILURE EXPECTED AND GOOD\n\n"; }
    ./waf setup --project halbe --update-branches force --zones symwaf2ic,mr
}
function test_marocco {
    ./waf setup --project marocco --with-ess
    ./waf configure
}
function test_jenkins {
    # Based on: git reset --hard HEAD^ && git push -f . master:remotes/origin/master

    # This resets the local repository to a state as if it had been cloned
    # prior the most recent commit to upstream master. There is a minor
    # drawback though: if there's an upstream push amidst this test, the test
    # would fail.

    ### Prepare test suite:
    # setup, update, reset and configure -> finally we have a state similar to one after a job has finished in jenkins

    ./waf distclean
    ./waf setup --project hicann-system --update-branches=force
    ./waf repos-update # we need to be up to date

    pushd hicann-system
        # get branch
        local branch=$(git symbolic-ref --short -q HEAD) || { echo "ERR: unexpected failure retrieving branch"; exit 1; }
        test "$branch" = "master" || echo "WARN: not on expected branch (i.e. master)."

        # get tracking branch
        local tracking=$(git rev-parse --abbrev-ref --symbolic-full-name @{u}) || { echo "ERR: unexpected failure retrieving remote tracking branch"; exit 1; }
        test "$tracking" = "origin/master" || echo "WARN: not on expected tracking branch (i.e. origin/master)."

        # reset tracking branch
        #local email=$(git log --format=%ae -n1)
        local email="$(git log --format=%an\ \<%ae\> -n1)" #  expecting up-to-dateness, this should equal the output if we specify ${tracking}.
        local commit=$(git log --oneline -n1)
        local lcom=$(git log --oneline -n1 HEAD^)

        git reset --hard HEAD^
        git push -f . ${branch}:remotes/${tracking} # resets tracking branch
        test "$lcom" = "$(git log --oneline -n1)"
        test "$lcom" = "$(git log --oneline -n1 ${branch})"
        test "$lcom" = "$(git log --oneline -n1 ${tracking})"
    popd

    # In case the dependency informations changed due to the reset, we need to
    # rebuild them. A configure works as well but addresses more than the
    # problem. The BuildTrigger should work without configure.
    ./waf setup --project hicann-system --update-branches=force

    ### Test case 1.) BuildTrigger:
    local ret=0
    WORKSPACE=$PWD ./waf jenkins BuildTrigger --zones jenkins,mr || ret=$?
    test $ret -eq 42 || { echo "ERR: BuildTrigger returned unexpectedly: $ret (42 was expected - indicating an upstream change)"; exit 1; }

    WORKSPACE=$PWD ./waf jenkins BuildTrigger &> /dev/null || { echo "ERR: The second BuildTrigger call returned unexpectedly: $? (0 was expected - as the previous call did an implicit fetch)"; exit 1; }

    pushd hicann-system
        test "$lcom" = "$(git log --oneline -n1)"
        test "$commit" = "$(git log --oneline -n1 ${tracking})" # calling the BuildTrigger should have updated the tracking branch.
    popd

    # that's what jenkins does - but works without these two lines too.
    ./waf distclean
    ./waf setup --project hicann-system --update-branches=force

    ### Test case 2.) getAuthors:
    WORKSPACE=$PWD ./waf jenkins getAuthors | grep "$email" || { echo "ERR: expected email not found in getAuthors output: '$email'."; exit 1; }

    # and once verbose...
    WORKSPACE=$PWD ./waf jenkins getAuthors --zones jenkins,mr

    # now followed by repos-update, configure and install - but that's not part of this test.
}

# COMBI TESTS
function test_super {
    run_tests default dependency reset marocco jenkins
}

# BUILDING SYMWAF2IC
function run_build {
    make > $TEST_DIR/make.log 2> $TEST_DIR/make.err
    ERR=$?
    if [ $ERR -ne 0 ]
    then
        cat $TEST_DIR/make.log
        cat $TEST_DIR/make.err
        return 1
    fi
    echo "BUILD: symwaf2ic-waf rebuild successfully."
}

# PREPARE TEST FOLDER
function run_prep {
    pushd ${TEST_DIR}
        ln -sf $WAFSRC_DIR/waf
        ./waf setup

        # bash completion (cd TEST_DIR; source ".symwaf2ic.bash_completion")
        cp "${WAFSRC_DIR}/utils/bash_completion" ".symwaf2ic.bash_completion"

        # Here doc needs tab indentation (aarg)
		cat > makewaf <<-EOF
			#!/bin/bash
			make -C "${WAFSRC_DIR}"
		EOF
    popd
    echo "PREP: test directory created successfully: '${TEST_DIR}'."
}

# TESTING SYMWAF2IC
function run_tests {
    set +o xtrace
    local i
    for i in "$@"
    do
        echo -e "\nEXECUTING TEST $i"
        cd $TEST_DIR

        set -o xtrace
        test_$i # we can't || here, it would disable set -e for the test case (it does _not_ change it to return-on-error).
        set +o xtrace
        echo -e "### [END $i] ###################################################\n"
    done
}

mkdir -p ${TEST_DIR} || { echo "Could not create test directory: ${TEST_DIR}"; exit 1; }
run_build || { echo "ERR: make failed, aborting test!"; exit 1; }
run_prep
echo
run_tests $TESTS

#!/bin/bash -e

# File:         executeSymwaf2icTest
# Author:       Kai Husmann <kai.husmann@kip.uni-heidelberg.de> (KHS)
# Changelog:    [2015-04-17 15:02:21]   created/released (KHS)
#               [2015-04-17 15:02:37]   now hiding make (KHS)
#               [2015-09-18 02:26:31]   TEST_DIR can now be specified as env (KHS)
# --- chlog insert above ---


# PREREQUISITES
TESTS="$@"
TESTS=${TESTS:-"default"}
TEST_DIR=${TEST_DIR:-"/tmp/symtest"}
OUR_ZONES="symwaf2ic,symwaf2ic_options,dependency,mr"


test -f "waf-light" || { echo "ERR: looks like we're executed in the wrong directory."; exit 1; }

mkdir -p $TEST_DIR
ln -sf $PWD/waf $TEST_DIR/waf


# TEST FUNCTIONS
function test_default { # just t
    ./waf setup --project lib-rcf --zones $OUR_ZONES
}
function test_dependency {
   ./waf setup --project halbe --zones symwaf2ic,symwaf2ic_dependency,mr --with-ess
}
function test_reset {
    test -d halbe && { pushd halbe; git checkout -f ess_trafo; echo "fu" >> project.prj; popd; }
    ./waf setup --project halbe --update-branches soft --zones symwaf2ic,mr \
        && { echo "SHOULD HAVE FAILED"; exit 1; } \
        || { echo -e "FAILURE EXPECTED AND GOOD\n\n"; }
    ./waf setup --project halbe --update-branches force --zones symwaf2ic,mr
}
function test_marocco {
    ./waf setup --project marocco --with-ess
    ./waf configure
}
function test_jenkins {
    ./waf setup --project hicann-system #--zones jenkins
    cd hicann-system
    git reset --hard HEAD^^
    git status
    cd ..
    WORKSPACE=$PWD ./waf jenkins getAuthors --zones jenkins,mr
}

# COMBI TESTS
function test_super {
    run_tests default dependency reset
}

# BUILDING SYMWAF2IC
function run_build {
    make > $TEST_DIR/make.log 2> $TEST_DIR/make.err
    ERR=$?
    if [ $ERR -ne 0 ]
    then
        cat $TEST_DIR/make.log
        cat $TEST_DIR/make.err
        return 1
    fi
    echo "BUILD: symwaf2ic-waf rebuild successfully."
    echo
}

# TESTING SYMWAF2IC
function run_tests {
    set +o xtrace
    local i
    for i in "$@"
    do
        echo -e "\nEXECUTING TEST $i"
        cd $TEST_DIR

        set -o xtrace
        test_$i
        set +o xtrace
        echo -e "### [END $i] ###################################################\n"
    done
}

run_build || { echo "ERR: make failed, aborting test!"; exit 1; }

run_tests $TESTS
